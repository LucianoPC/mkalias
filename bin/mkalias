#!/usr/bin/env ruby

require "bundler/setup"
require 'mkalias'

VALID_OPTIONS = ['new', 'list', 'show', 'remove']

def usage
  puts "Usage: mkalias [option]"
  puts "option: new \t -> mkalias new [alias] [command]"
  puts "option: list \t -> mkalias list"
  puts "option: show \t -> mkalias show [alias]"
  puts "option: remove \t -> mkalias remove [alias]"
  puts "\n"
  puts "Attention: To make alias with args use #. Example:"
  puts " $ mkalias new [alias] \"echo #1 #2 #3\""
  puts " - Then you can use: $ [alias] arg1 arg2 arg3"
  abort
end

def new_alias
  if ARGV.count < 3
    usage
  end

  alias_name = ARGV[1]
  commands = ARGV[2..-1]
  result = Mkalias.new_alias(alias_name, commands)

  if result
    puts " - Created Alias: #{alias_name}"
    puts " - Run '$ bash --login' to use your alias"
  else
    puts " ERROR: O Alias [#{alias_name}] jÃ¡ existe"
  end
end

def list_alias
  alias_names = Mkalias.list_alias

  puts "Registered Alias:"
  alias_names.each do |alias_name|
    puts " - #{alias_name}"
  end
end

def show_alias
  if ARGV.count < 2
    usage
  end
  alias_name = ARGV[1]
  alias_function = Mkalias.show_alias(alias_name)

  if alias_function
    puts "#{alias_name}:"
    puts " #{alias_function}"
  else
    puts "Alias [#{alias_name}] not founded"
  end
end

def remove_alias
  if ARGV.count < 2
    usage
  end
  alias_name = ARGV[1]
  removed = Mkalias.remove_alias(alias_name)

  if removed
    puts "Removed Alias: #{alias_name}"
  else
    puts "Alias [#{alias_name}] not founded"
  end
end

def main
  if ARGV.count == 0 || !VALID_OPTIONS.include?(ARGV[0])
    usage
  end

  option = ARGV[0]

  if option == 'new'
    new_alias
  elsif option == 'list'
    list_alias
  elsif option == 'show'
    show_alias
  elsif option == 'remove'
    remove_alias
  else
    usage
  end
end

main
